<?xml version="1.0" encoding="UTF-8"?>
<agent xmlns="http://www.lotus.com/dxl" name="(setACLentries)" hide="v3" publicaccess="false" restrictions="unrestricted">
  <trigger type="agentlist"/>
  <documentset type="selected"/>
  <code event="action">
    <javaproject class="JavaAgent.class" compiledebug="true">
      <java name="JavaAgent.java">import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

import CommonUtil.GUIprompt;
import CommonUtil.ReadProfileDocument;
import lotus.domino.*;

/*
 * Created by: Tomasz Wieszczura/Poland/IBM
 * 
 * Status for day 3.10.2018: Agent finished.
 */

public class JavaAgent extends AgentBase {

    public void NotesMain() {

      try {
          Session session = getSession();
          AgentContext agentContext = session.getAgentContext();

          // (Your code goes here)
          String[] access = {"NOACCESS", "Manager", "Designer", "Editor", "Author", "Reader", "Depositor" };
          
          GUIprompt gui = new GUIprompt();
          String s = gui.inputWindow(access, "Choose access level to set to all ACLs entries to all db");
          System.out.println("wybrano: " + s);
          int choose = 0;
          
          if (s.equals("NOACCESS")) choose = 0;
          if (s.equals("Depositor")) choose = 1;
          if (s.equals("Reader")) choose = 2;
          if (s.equals("Author")) choose = 3;
          if (s.equals("Editor")) choose = 4;
          if (s.equals("Designer")) choose = 5;
          if (s.equals("Manager")) choose = 6;
          
          setACL(choose);
         
      }
      catch(NotesException ne)
      {
    	  ne.printStackTrace();
      }
      catch(Exception e) {
          e.printStackTrace();
       }
   }       
    
    public void setACL(int level) throws NotesException
    {
    	Session s = getSession();
    	AgentContext agt = s.getAgentContext();
    	DocumentCollection dc = agt.getUnprocessedDocuments();
    	Document doc = dc.getFirstDocument();
    	Document docTmp = null;
    	Database db = null;
    	
    	ACL acl = null;
    	ACLEntry aclEntry = null;
    	ACLEntry aclTmp = null;
    	
    	ReadProfileDocument pr = new ReadProfileDocument(s);	// Read db's configuration
    	Document profile = pr.getProfileDocument();    	    	// ...
    	
    	int aclIndex = -1;
    	String dbPath = "";
    	String server = profile.getItemValueString("serverName");
    	Vector excludeList = profile.getItemValue("aclExclude");
    	
    	//pr.printProfileDoc();
    	
    	System.out.println(dc.getCount() + " databases to edit.");
    	System.out.println("===START processing...===\n");
    	
    	while(doc!=null)
    	{
    		dbPath = doc.getItemValueString("dbPath");	// get db path from current document
    		if (server.equals(""))
    			db = s.getDatabase(null, dbPath);			// null - maybe read server from doc? but in local it is empty...
    		else
    			db = s.getDatabase(server, dbPath);
    		
    		System.out.println("==================\n" + db.getFileName() + "\n==================");		// print db name
    		
    		acl = db.getACL();							// get db's ACl
    		aclEntry = acl.getFirstEntry();				// read first entry from ACL
    		
    		while(aclEntry!=null)
    		{    			
    			// if aclIndex == -1 -&gt; entry not found in exclude list
    			// if aclIndex != -1 -&gt; returns the index of found entry in exclude list
    			// Looking for acl entry in exclude list
    			aclIndex = excludeList.indexOf(aclEntry.getName().toString());
    			//System.out.println(aclEntry.getName() + " : " + aclIndex);
    			if (aclIndex!=-1 || aclEntry.getName().equals(server))
    			{
    				// This entry will NOT be change in ACL
    				//System.out.println("This entry will NOT be change in ACL");
    			}
    			else
    			{
    				// This entry will be change in ACL
    				aclEntry.setLevel(level);			// set level to the chose by user
    				System.out.println(aclEntry.getName() + "\t SET to: " + level);
    			}
    			
    			aclTmp = acl.getNextEntry(aclEntry);
    			aclEntry.recycle();
    			aclEntry = aclTmp;
    		}
    		try
    		{
    			// If server is not added to ACL list, create entry with manager rights
    			// (just in case)
    			acl.createACLEntry(server, 6);
    		}
    		catch(NotesException ne)
    		{
    			// Server's acl entry exist
    			System.out.println("\nCannot add ACL entry: " + server);
    		}
    		acl.save();
    		acl.recycle();
    		docTmp = dc.getNextDocument(doc);
    		doc.recycle();
    		doc = docTmp;
    		
    		System.out.println("\n");
    	}
    	
    	System.out.println("===FINISHED processing===\n");
    	
    }
             
}</java>
      <sharedlibraryref name="CommonUtility"/>
    </javaproject>
  </code>
  <item name="$JavaCompilerSource">
    <text>1.3</text>
  </item>
  <item name="$JavaCompilerTarget">
    <text>1.2</text>
  </item>
</agent>